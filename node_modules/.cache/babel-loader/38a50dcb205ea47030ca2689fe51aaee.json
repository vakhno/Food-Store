{"ast":null,"code":"import { useRef, useEffect, useState, useCallback } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useLatest = function (val) {\n  var ref = useRef(val);\n  useEffect(function () {\n    ref.current = val;\n  });\n  return ref;\n};\n\nvar _debounce = function (fn, wait) {\n  var timer; // eslint-disable-next-line func-names\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timer !== null) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    timer = setTimeout(function () {\n      return fn.apply(_this, args);\n    }, wait);\n  };\n};\n\nvar loadApiErr = \"ðŸ’¡ use-places-autocomplete: Google Maps Places API library must be loaded. See: https://github.com/wellyshen/use-places-autocomplete#load-the-library\";\n\nvar usePlacesAutocomplete = function usePlacesAutocomplete(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      requestOptions = _ref.requestOptions,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? 200 : _ref$debounce,\n      _ref$cache = _ref.cache,\n      cache = _ref$cache === void 0 ? 24 * 60 * 60 : _ref$cache,\n      googleMaps = _ref.googleMaps,\n      callbackName = _ref.callbackName,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? \"\" : _ref$defaultValue;\n\n  var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = useState(defaultValue),\n      value = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState({\n    loading: false,\n    status: \"\",\n    data: []\n  }),\n      suggestions = _useState3[0],\n      setSuggestions = _useState3[1];\n\n  var asRef = useRef(null);\n  var requestOptionsRef = useLatest(requestOptions);\n  var googleMapsRef = useLatest(googleMaps);\n  var init = useCallback(function () {\n    var _google$maps;\n\n    var _window = window,\n        google = _window.google;\n    var gMaps = googleMapsRef.current;\n    var placesLib = (gMaps == null ? void 0 : gMaps.places) || (google == null ? void 0 : (_google$maps = google.maps) == null ? void 0 : _google$maps.places);\n\n    if (!placesLib) {\n      console.error(loadApiErr);\n      return;\n    }\n\n    asRef.current = new placesLib.AutocompleteService();\n    setReady(true);\n  }, []);\n  var clearSuggestions = useCallback(function () {\n    setSuggestions({\n      loading: false,\n      status: \"\",\n      data: []\n    });\n  }, []);\n  var fetchPredictions = useCallback(_debounce(function (val) {\n    if (!val) {\n      clearSuggestions();\n      return;\n    }\n\n    setSuggestions(function (prevState) {\n      return _extends({}, prevState, {\n        loading: true\n      });\n    });\n    var cachedData = JSON.parse(sessionStorage.getItem(\"upa\") || \"{}\");\n\n    if (cache) {\n      cachedData = Object.keys(cachedData).reduce(function (acc, key) {\n        if (cachedData[key].maxAge - Date.now() >= 0) acc[key] = cachedData[key];\n        return acc;\n      }, {});\n\n      if (cachedData[val]) {\n        setSuggestions({\n          loading: false,\n          status: \"OK\",\n          data: cachedData[val].data\n        });\n        return;\n      }\n    } // @ts-expect-error\n\n\n    asRef.current.getPlacePredictions(_extends({}, requestOptionsRef.current, {\n      input: val\n    }), function (data, status) {\n      setSuggestions({\n        loading: false,\n        status: status,\n        data: data || []\n      });\n\n      if (cache && status === \"OK\") {\n        cachedData[val] = {\n          data: data,\n          maxAge: Date.now() + cache * 1000\n        };\n\n        try {\n          sessionStorage.setItem(\"upa\", JSON.stringify(cachedData));\n        } catch (error) {// skip exception\n        }\n      }\n    });\n  }, debounce), [debounce, clearSuggestions]);\n  var setValue = useCallback(function (val, shouldFetchData) {\n    if (shouldFetchData === void 0) {\n      shouldFetchData = true;\n    }\n\n    setVal(val);\n    if (asRef.current && shouldFetchData) fetchPredictions(val);\n  }, [fetchPredictions]);\n  useEffect(function () {\n    var _window2 = window,\n        google = _window2.google;\n\n    if (!googleMapsRef.current && !(google != null && google.maps) && callbackName) {\n      window[callbackName] = init;\n    } else {\n      init();\n    }\n\n    return function () {\n      // @ts-expect-error\n      if (window[callbackName]) delete window[callbackName];\n    };\n  }, [callbackName, init]);\n  return {\n    ready: ready,\n    value: value,\n    suggestions: suggestions,\n    setValue: setValue,\n    clearSuggestions: clearSuggestions\n  };\n};\n/* eslint-disable compat/compat */\n\n\nvar geocodeErr = \"ðŸ’¡ use-places-autocomplete: Please provide an address when using getGeocode() with the componentRestrictions.\";\n\nvar getGeocode = function getGeocode(args) {\n  var geocoder = new window.google.maps.Geocoder();\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n\n      if (!args.address && args.componentRestrictions) {\n        console.error(geocodeErr);\n        resolve(results);\n      }\n\n      resolve(results);\n    });\n  });\n};\n\nvar getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var _result$geometry$loca = result.geometry.location,\n          lat = _result$geometry$loca.lat,\n          lng = _result$geometry$loca.lng;\n      resolve({\n        lat: lat(),\n        lng: lng()\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nvar getZipCode = function getZipCode(result, useShortName) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var zipCode = null;\n      result.address_components.forEach(function (_ref) {\n        var long_name = _ref.long_name,\n            short_name = _ref.short_name,\n            types = _ref.types;\n        if (types.includes(\"postal_code\")) zipCode = useShortName ? short_name : long_name;\n      });\n      resolve(zipCode);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nvar getDetailsErr = \"ðŸ’¡ use-places-autocomplete: Please provide a place Id when using getDetails() either as a string or as part of an Autocomplete Prediction.\";\n\nvar getDetails = function getDetails(args) {\n  var PlacesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n\n  if (!args.placeId) {\n    console.error(getDetailsErr);\n    return Promise.reject(getDetailsErr);\n  }\n\n  return new Promise(function (resolve, reject) {\n    PlacesService.getDetails(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n      resolve(results);\n    });\n  });\n};\n\nexport default usePlacesAutocomplete;\nexport { getDetails, getGeocode, getLatLng, getZipCode };","map":{"version":3,"sources":["C:/Users/profr/OneDrive/Desktop/Food-Store/node_modules/use-places-autocomplete/dist/index.esm.js"],"names":["useRef","useEffect","useState","useCallback","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useLatest","val","ref","current","_debounce","fn","wait","timer","_this","_len","args","Array","_key","clearTimeout","setTimeout","loadApiErr","usePlacesAutocomplete","_temp","_ref","requestOptions","_ref$debounce","debounce","_ref$cache","cache","googleMaps","callbackName","_ref$defaultValue","defaultValue","_useState","ready","setReady","_useState2","value","setVal","_useState3","loading","status","data","suggestions","setSuggestions","asRef","requestOptionsRef","googleMapsRef","init","_google$maps","_window","window","google","gMaps","placesLib","places","maps","console","error","AutocompleteService","clearSuggestions","fetchPredictions","prevState","cachedData","JSON","parse","sessionStorage","getItem","keys","reduce","acc","maxAge","Date","now","getPlacePredictions","input","setItem","stringify","setValue","shouldFetchData","_window2","geocodeErr","getGeocode","geocoder","Geocoder","Promise","resolve","reject","geocode","results","address","componentRestrictions","getLatLng","result","_result$geometry$loca","geometry","location","lat","lng","getZipCode","useShortName","zipCode","address_components","forEach","long_name","short_name","types","includes","getDetailsErr","getDetails","PlacesService","document","createElement","placeId"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState, useCallback } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useLatest = (function (val) {\n  var ref = useRef(val);\n  useEffect(function () {\n    ref.current = val;\n  });\n  return ref;\n});\n\nvar _debounce = (function (fn, wait) {\n  var timer; // eslint-disable-next-line func-names\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timer !== null) {\n      clearTimeout(timer);\n      timer = null;\n    }\n\n    timer = setTimeout(function () {\n      return fn.apply(_this, args);\n    }, wait);\n  };\n});\n\nvar loadApiErr = \"ðŸ’¡ use-places-autocomplete: Google Maps Places API library must be loaded. See: https://github.com/wellyshen/use-places-autocomplete#load-the-library\";\n\nvar usePlacesAutocomplete = function usePlacesAutocomplete(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      requestOptions = _ref.requestOptions,\n      _ref$debounce = _ref.debounce,\n      debounce = _ref$debounce === void 0 ? 200 : _ref$debounce,\n      _ref$cache = _ref.cache,\n      cache = _ref$cache === void 0 ? 24 * 60 * 60 : _ref$cache,\n      googleMaps = _ref.googleMaps,\n      callbackName = _ref.callbackName,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? \"\" : _ref$defaultValue;\n\n  var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = useState(defaultValue),\n      value = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState({\n    loading: false,\n    status: \"\",\n    data: []\n  }),\n      suggestions = _useState3[0],\n      setSuggestions = _useState3[1];\n\n  var asRef = useRef(null);\n  var requestOptionsRef = useLatest(requestOptions);\n  var googleMapsRef = useLatest(googleMaps);\n  var init = useCallback(function () {\n    var _google$maps;\n\n    var _window = window,\n        google = _window.google;\n    var gMaps = googleMapsRef.current;\n    var placesLib = (gMaps == null ? void 0 : gMaps.places) || (google == null ? void 0 : (_google$maps = google.maps) == null ? void 0 : _google$maps.places);\n\n    if (!placesLib) {\n      console.error(loadApiErr);\n      return;\n    }\n\n    asRef.current = new placesLib.AutocompleteService();\n    setReady(true);\n  }, []);\n  var clearSuggestions = useCallback(function () {\n    setSuggestions({\n      loading: false,\n      status: \"\",\n      data: []\n    });\n  }, []);\n  var fetchPredictions = useCallback(_debounce(function (val) {\n    if (!val) {\n      clearSuggestions();\n      return;\n    }\n\n    setSuggestions(function (prevState) {\n      return _extends({}, prevState, {\n        loading: true\n      });\n    });\n    var cachedData = JSON.parse(sessionStorage.getItem(\"upa\") || \"{}\");\n\n    if (cache) {\n      cachedData = Object.keys(cachedData).reduce(function (acc, key) {\n        if (cachedData[key].maxAge - Date.now() >= 0) acc[key] = cachedData[key];\n        return acc;\n      }, {});\n\n      if (cachedData[val]) {\n        setSuggestions({\n          loading: false,\n          status: \"OK\",\n          data: cachedData[val].data\n        });\n        return;\n      }\n    } // @ts-expect-error\n\n\n    asRef.current.getPlacePredictions(_extends({}, requestOptionsRef.current, {\n      input: val\n    }), function (data, status) {\n      setSuggestions({\n        loading: false,\n        status: status,\n        data: data || []\n      });\n\n      if (cache && status === \"OK\") {\n        cachedData[val] = {\n          data: data,\n          maxAge: Date.now() + cache * 1000\n        };\n\n        try {\n          sessionStorage.setItem(\"upa\", JSON.stringify(cachedData));\n        } catch (error) {// skip exception\n        }\n      }\n    });\n  }, debounce), [debounce, clearSuggestions]);\n  var setValue = useCallback(function (val, shouldFetchData) {\n    if (shouldFetchData === void 0) {\n      shouldFetchData = true;\n    }\n\n    setVal(val);\n    if (asRef.current && shouldFetchData) fetchPredictions(val);\n  }, [fetchPredictions]);\n  useEffect(function () {\n    var _window2 = window,\n        google = _window2.google;\n\n    if (!googleMapsRef.current && !(google != null && google.maps) && callbackName) {\n      window[callbackName] = init;\n    } else {\n      init();\n    }\n\n    return function () {\n      // @ts-expect-error\n      if (window[callbackName]) delete window[callbackName];\n    };\n  }, [callbackName, init]);\n  return {\n    ready: ready,\n    value: value,\n    suggestions: suggestions,\n    setValue: setValue,\n    clearSuggestions: clearSuggestions\n  };\n};\n\n/* eslint-disable compat/compat */\nvar geocodeErr = \"ðŸ’¡ use-places-autocomplete: Please provide an address when using getGeocode() with the componentRestrictions.\";\nvar getGeocode = function getGeocode(args) {\n  var geocoder = new window.google.maps.Geocoder();\n  return new Promise(function (resolve, reject) {\n    geocoder.geocode(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n\n      if (!args.address && args.componentRestrictions) {\n        console.error(geocodeErr);\n        resolve(results);\n      }\n\n      resolve(results);\n    });\n  });\n};\nvar getLatLng = function getLatLng(result) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var _result$geometry$loca = result.geometry.location,\n          lat = _result$geometry$loca.lat,\n          lng = _result$geometry$loca.lng;\n      resolve({\n        lat: lat(),\n        lng: lng()\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nvar getZipCode = function getZipCode(result, useShortName) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var zipCode = null;\n      result.address_components.forEach(function (_ref) {\n        var long_name = _ref.long_name,\n            short_name = _ref.short_name,\n            types = _ref.types;\n        if (types.includes(\"postal_code\")) zipCode = useShortName ? short_name : long_name;\n      });\n      resolve(zipCode);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nvar getDetailsErr = \"ðŸ’¡ use-places-autocomplete: Please provide a place Id when using getDetails() either as a string or as part of an Autocomplete Prediction.\";\nvar getDetails = function getDetails(args) {\n  var PlacesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n\n  if (!args.placeId) {\n    console.error(getDetailsErr);\n    return Promise.reject(getDetailsErr);\n  }\n\n  return new Promise(function (resolve, reject) {\n    PlacesService.getDetails(args, function (results, status) {\n      if (status !== \"OK\") reject(status);\n      resolve(results);\n    });\n  });\n};\n\nexport default usePlacesAutocomplete;\nexport { getDetails, getGeocode, getLatLng, getZipCode };\n"]},"metadata":{},"sourceType":"module"}